{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport thunkMiddleware from 'redux-thunk';\nimport { CalculatorReducer } from \"./reducers/calc_reducer\";\nconst rootReducers = combineReducers({\n  calc: CalculatorReducer\n});\nexport const store = configureStore({\n  reducer: rootReducers,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\n});\n// @ts-ignore\nwindow.store = store;","map":{"version":3,"names":["combineReducers","configureStore","thunkMiddleware","CalculatorReducer","rootReducers","calc","store","reducer","middleware","getDefaultMiddleware","prepend","window"],"sources":["/Users/macbook/calculator_dnd/calc_dnd/src/state_manager/store.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport thunkMiddleware, { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { CalcActionsType, CalculatorReducer } from \"./reducers/calc_reducer\";\n\n\nconst rootReducers = combineReducers({\n    calc: CalculatorReducer\n}\n)\n\nexport const store = configureStore({\n    reducer: rootReducers,\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\n})\n\nexport type AppRootStateType = ReturnType<typeof rootReducers>\nexport type AllAppActionsType = CalcActionsType\nexport type AppDispatch = ThunkDispatch<AppRootStateType, unknown, AllAppActionsType>\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllAppActionsType>\n\n// @ts-ignore\nwindow.store = store"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,eAAe,MAAsC,aAAa;AACzE,SAA0BC,iBAAiB,QAAQ,yBAAyB;AAG5E,MAAMC,YAAY,GAAGJ,eAAe,CAAC;EACjCK,IAAI,EAAEF;AACV,CAAC,CACA;AAED,OAAO,MAAMG,KAAK,GAAGL,cAAc,CAAC;EAChCM,OAAO,EAAEH,YAAY;EACrBI,UAAU,EAAEC,oBAAoB,IAAIA,oBAAoB,EAAE,CAACC,OAAO,CAACR,eAAe;AACtF,CAAC,CAAC;AAOF;AACAS,MAAM,CAACL,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}